<?php
/**
 * Created by PhpStorm.
 * User: brodriguez
 * Date: 03/05/17
 * Time: 06:51 PM
 */

namespace Kardex\Form;


use Almacen\Model\AlmacenMapper;
use Kardex\Model\MovimientoEntity;
use Zend\Db\Adapter\Adapter;
use Zend\Form\Fieldset;
use Zend\ServiceManager\ServiceLocatorAwareInterface;
use Zend\ServiceManager\ServiceLocatorInterface;
use Zend\Stdlib\Hydrator\ClassMethods;

class MovimientoFieldset extends Fieldset implements ServiceLocatorAwareInterface
{
    protected $serviceLocator;
    protected $almacenMapper;

    public function setServiceLocator(ServiceLocatorInterface $serviceLocator)
    {
        $this->serviceLocator = $serviceLocator;
    }

    public function getServiceLocator()
    {
        return $this->serviceLocator;
    }

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub


    }


    /**
     * MovimientoFieldset constructor.
     */
    public function __construct(AlmacenMapper $almacenMapper, $name = null, $options = array())
    {
        parent::__construct($name, $options);
        $this->almacenMapper = $almacenMapper;
        $this->setAttribute('method', 'post');
        $this->setHydrator(new ClassMethods(false));
        $this->setObject(new MovimientoEntity());

        $this->add(array(
            'type'  =>  'hidden',
            'name'  =>  'id',
            'attributes' => array(
                'id' => 'id',
            )
        ));

        $this->add(array(
            'type'  =>  'hidden',
            'name'  =>  'tipo',
            'attributes' => array(
                'id' => 'tipo',
            )
        ));

        $this->add(array(
            'type'  =>  'hidden',
            'name'  =>  'documento',
            'attributes' => array(
                'id' => 'documento',
            )
        ));

        $this->add(array(
            'type'  =>  'hidden',
            'name'  =>  'usuario',
            'attributes' => array(
                'id' => 'usuario',
            )
        ));

        $this->add(array(
            'type'  =>  'hidden',
            'name'  =>  'fecha',
            'attributes' => array(
                'id' => 'fecha',
            )
        ));

        $this->add(array(
            'type' => 'Zend\Form\Element\Select',
            'name' => 'almacen',
            'options' => array(
                'label' => 'Almacen: ',
                'required' => false,
                'empty_option' => 'Seleccione AlmacÃ©n de Destino',
                'value_options' => $this->getAlmacenForSelect(),
            ),
            'attributes' => array(
                'id' => 'almacen',
            )
        ));

    }

    public function getAlmacenForSelect()
    {
        $almacenMapper = $this->almacenMapper;
        $almacen = $almacenMapper->fetchAll();
        $result    = $almacen->toArray();

        $selectData = array();

        foreach ($result as $res) {
            $selectData[$res['id']] = $res['nombre'];
        }
        return $selectData;
    }
}